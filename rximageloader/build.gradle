apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //retrofit+rxjava 网络请求及数据解析相关
    api "io.reactivex.rxjava2:rxjava:2.2.6"
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'com.squareup.retrofit2:retrofit:2.2.0'
    api 'com.squareup.retrofit2:converter-gson:2.2.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    api 'com.squareup.okhttp3:okhttp:3.1.2'
    api 'com.google.code.gson:gson:2.8.5'

    implementation 'com.android.support:appcompat-v7:28.0.0-alpha1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

//删除存在的Jar包
task deleteOldJar(type: Delete) {
    delete 'build/outputs/RxImageLoader.jar'
}

task exportJar(type: Copy) {
    //设置拷贝文件
    from('build/intermediates/packaged-classes/release/')
    //jar生成后的目录
    into('build/libs/')
    include('classes.jar')
    //重命名
    rename('classes.jar', 'RxImageLoader.jar')
}

exportJar.dependsOn(deleteOldJar, build)
